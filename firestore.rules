rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Folders - users can access folders they own or folders shared with them
    match /folders/{folderId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.owner ||
        (resource.data.sharedWith != null && request.auth.uid in resource.data.sharedWith)
      );
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.owner;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.owner;
    }
    
    // Files - users can access files they own or files shared with them
    match /files/{fileId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.owner ||
        request.auth.uid in resource.data.sharedWith
      );
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.owner;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.owner;
    }
    
    // Groups - users can only access groups they own
    match /groups/{groupId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.owner;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.owner;
    }
    
    // Sharing History - users can only access their own sharing history
    match /sharingHistory/{historyId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.owner;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.owner;
    }
  }
}